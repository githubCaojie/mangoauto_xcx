// pages/oldAndNew/oldAndNew.js
Page({

  /**
   * 页面的初始数据
   */
  data: {
    car:'',
    userName:'',
    userMobile:''
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {

  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {
    this.selectcartype = this.selectComponent("#selectcartype");
  },
  //点击搜索
  showPopup() {
    this.selectcartype.showPopup()
  },
  chooseCar(event) {
    let data = event.detail
    console.log(data)
    this.setData({
      car: `${data.carbrandName} ${data.carSerieName} ${data.carTypeName}`
    })
  },
  nameInput(e){
    this.setData({
      userName:e.detail.value
    })
  },
  mobileInput(e){
    this.setData({
      userMobile:e.detail.value
    })
  },
  btnOkClient() {
    let _this = this
    let car = _this.data.car
    let name = _this.data.userName
    let mobile = _this.data.userMobile
    if(!name){
      return wx.showToast({
        title: '请输入客户姓名',
        icon: 'none',
        duration: 2000
      })
    }
    if(!mobile){
      return wx.showToast({
        title: '请输入联系电话',
        icon: 'none',
        duration: 2000
      })
    }else{
      let check = new RegExp("^0?(13[0-9]|15[0-9]|18[0-9]|17[0-9]|14[0-9]|19[0-9]|16[0-9])[0-9]{8}$");
      if (!check.test(mobile)) {
        return wx.showToast({
          title: '请输入正确的联系电话',
          icon: 'none',
          duration: 2000,
          success: function(){
            _this.setData({
              userMobile: ''
            })
          }
        })
      }
    }
    if (!car){
      return wx.showToast({
        title: '请选择意向车型',
        icon: 'none',
        duration: 2000
      })
    }
  },
  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})